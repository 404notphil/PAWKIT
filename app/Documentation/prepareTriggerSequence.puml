@startuml
Instrument->Instrument++: init()

Instrument->ResourceManager++: ResourceManager()
ResourceManager->ResourceManager++: prepareSnapshot()
deactivate
ResourceManager->: analyzeFiles()
ResourceManager<--
return ResourceManager
Instrument->: prepareSamples()
Instrument<--:SampleLibraryFactory


Instrument->SampleManager: SampleManager(SampleLibraryFactory)


Instrument->TriggerGraphFactory++: TriggerGraphFactory()
TriggerGraphFactory->TriggerGraphFactory++: prepareTriggers()
TriggerGraphFactory->ResourceManager++: getGroupCount()
return Int


loop forEachGroupInSnapshot
TriggerGraphFactory->TriggerZone++: TriggerZone()
return new
TriggerGraphFactory->ResourceManager++: getLayerCount(group: Int)
return Int
loop forEachLayerInGroup
TriggerGraphFactory->ZoneLayer++: ZoneLayer()
return new


TriggerGraphFactory->SampleGroup++:addLayer(ZoneLayer)
return
end loop
TriggerGraphFactory->TriggerGraphFactory++: addZone(TriggerZone)
deactivate
end loop
deactivate
return TriggerGraphFactory


Instrument->TriggerManager++: TriggerManager(TriggerGraphFactory)
return TriggerManager

Instrument->TriggerManager++: SampleManager(SampleLibraryFactory)
return SampleManager


Instrument->PlayerFactory++: getInstance(TriggerManager, SampleManager)
return PlayerFactory
@enduml